stages:
  - build
  - package
  - deploy

services:
  - docker:dind

variables:
  IMAGE_NAME: zensoft/kicker
  SERVICE_NAME: kicker


###########################
# Building
###########################
build-jar:
  stage: build
  image: openjdk:8-jdk
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
  script:
    - ./gradlew build
  cache:
    paths:
      - .gradle/wrapper
      - .gradle/caches
  artifacts:
    paths:
      - /backend/build/libs/*.jar
    expire_in: 1 day


###########################
# Packaging
###########################
package-docker:
  stage: package
  image: docker:latest
  dependencies:
    - build-jar
  script:
    - export IMAGE_TAG=latest
    - docker login -u ${DOCKER_LOGIN} -p ${DOCKER_PASS}
    - docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
    - docker push ${IMAGE_NAME}:${IMAGE_TAG}
  only:
    - master

###########################
# Deployment
###########################
deploy:
  stage: deploy
  image: ${IMAGE_NAME}-deploy
  dependencies: []
  variables:
    POSTGRES_HOST: "postgres"
    POSTGRES_DB: "kicker"
    POSTGRES_USER: ${POSTGRES_USERNAME}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    SERVER_HOST: "http://kicker.zensoft.by"
    OUTER_PORT: 8585
  services:
    - postgres:9.6.11
  script:
    - docker rm -vf ${SERVICE_NAME}
    - docker rmi -f ${IMAGE_NAME}
    - docker run \
      -d \
      --name ${SERVICE_NAME} \
      -v /data:/data \
      -e POSTGRES_HOST=${POSTGRES_HOST} \
      -e POSTGRES_DB=${POSTGRES_DB} \
      -e POSTGRES_USER=${POSTGRES_USER} \
      -e POSTGRES_PASSWORD=${POSTGRES_PASSWORD} \
      -e SERVER_HOST=${SERVER_HOST} \
      -p ${OUTER_PORT}:8080 \
      ${IMAGE_NAME}
  only:
    - master